" Author: Philipp Moers <soziflip@gmail.com>
" A simple vimrc. With no dependencies


" SETTINGS

" who uses original vi anyway?
set nocompatible

" encoding should be utf-8 on every OS
set encoding=utf-8
set fileencoding=utf-8

" theme
"colorscheme murphy
colorscheme desert

" disable powerline
let g:powerline_loaded = 1

" syntax highlighting
syntax on

" show relative line numbers
set nonumber
set norelativenumber

" statusline
set statusline="%f%m%r%h%w [%Y] [0x%02.2B]%< %F%=%4v,%4l %3p%% of %L"
set ruler

" search preferences
set incsearch
set ignorecase
set smartcase

" use 4 spaces instead of tabs
set expandtab
set tabstop=4
set shiftwidth=4

" indent after open braces etc
set autoindent
set smartindent

" allow to :edit multiple files in buffers without writing changes
set hidden



" KEYBINDINGS

" compatibility 
nnoremap <C-g><C-g> <C-g>

" reload this config file
nnoremap <F5> :source ~/.vimrc<CR>

" ZQ to quit discarding changes 
" ZZ to save and quit
" Q  to quit vim quickly (will prompt if the file was changed but not saved)
nnoremap Q :quit<CR>
nnoremap <C-D> :quitall<CR>

" save changes without quit
nnoremap <Esc>s :write<CR>

" move intuitively when text is wrapped
nnoremap j gj
nnoremap k gk

" move faster
nnoremap gj 10j
nnoremap gk 10k

" scroll (alt key)
noremap <Esc>j <C-D> 
noremap <Esc>k <C-U> 

" toggle line numbers 
noremap <C-g>l :set number! <bar> :set relativenumber! <CR>

" toggle word wrap
nnoremap <C-g>w :set wrap! <CR>

" search 
nnoremap ö /
nnoremap Ö ?

" swap , and ; (makes more sense on german keyboard)
nnoremap , ;
nnoremap ; ,

" swap implementations of ` and ' jump to markers
" (by default, ' marked line, ` marked line and column)
nnoremap ' `
nnoremap ` '

" goto mark 
nnoremap ä `

" registers
nnoremap Ä "

" movement to eol (l instead of $)
nnoremap cl c$
nnoremap yl y$
nnoremap dl d$
nnoremap vl v$

" add new line above or below
noremap <Esc>o <Esc>o<Esc>k
noremap <Esc>O <Esc>O<Esc>j

" undo and redo
noremap <Esc>u :undo<CR>
noremap <Esc>U :redo<CR>

" multiple buffers
nnoremap # :buffer 
nnoremap <Esc>n :bnext<CR>
nnoremap <Esc>p :bprevious<CR>
