# git-push
# Autogenerated from man page /usr/share/man/man1/git-push.1.gz
# using Deroffing man parser
complete -c git-push -l all --description 'Instead of naming each ref to push, specifies t… [See Man Page]'
complete -c git-push -l mirror --description 'Instead of naming each ref to push, specifies t… [See Man Page]'
complete -c git-push -s n -l dry-run --description 'Do everything except actually send the updates.'
complete -c git-push -l porcelain --description 'Produce machine-readable output.'
complete -c git-push -l delete --description 'All listed refs are deleted from the remote repository.'
complete -c git-push -l tags --description 'All refs under refs/tags are pushed, in additio… [See Man Page]'
complete -c git-push -l receive-pack -l exec --description 'Path to the git-receive-pack program on the remote end.'
complete -c git-push -s f -l force --description 'Usually, the command refuses to update a remote… [See Man Page]'
complete -c git-push -l repo --description 'This option is only relevant if no <repository>… [See Man Page]'
complete -c git-push -s u -l set-upstream --description 'For every branch that is up to date or successf… [See Man Page]'
complete -c git-push -l thin -l no-thin --description 'These options are passed to git-send-pack(1).'
complete -c git-push -s q -l quiet --description 'Suppress all output, including the listing of u… [See Man Page]'
complete -c git-push -s v -l verbose --description 'Run verbosely.'
complete -c git-push -l progress --description 'Progress status is reported on the standard err… [See Man Page]'
complete -c git-push -l recurse-submodules --description 'Check whether all submodule commits used by the… [See Man Page]'

