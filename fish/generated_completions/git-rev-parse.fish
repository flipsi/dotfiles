# git-rev-parse
# Autogenerated from man page /usr/share/man/man1/git-rev-parse.1.gz
# using Deroffing man parser
complete -c git-rev-parse -l parseopt --description 'Use git rev-parse in option parsing mode (see P… [See Man Page]'
complete -c git-rev-parse -l keep-dashdash --description 'Only meaningful in --parseopt mode.'
complete -c git-rev-parse -l stop-at-non-option --description 'Only meaningful in --parseopt mode.'
complete -c git-rev-parse -l sq-quote --description 'Use git rev-parse in shell quoting mode (see SQ… [See Man Page]'
complete -c git-rev-parse -l revs-only --description 'Do not output flags and parameters not meant fo… [See Man Page]'
complete -c git-rev-parse -l no-revs --description 'Do not output flags and parameters meant for gi… [See Man Page]'
complete -c git-rev-parse -l flags --description 'Do not output non-flag parameters.'
complete -c git-rev-parse -l no-flags --description 'Do not output flag parameters.'
complete -c git-rev-parse -l default --description 'If there is no parameter given by the user, use <arg> instead.'
complete -c git-rev-parse -l verify --description 'The parameter given must be usable as a single,… [See Man Page]'
complete -c git-rev-parse -s q -l quiet --description 'Only meaningful in --verify mode.'
complete -c git-rev-parse -l sq --description 'Usually the output is made one line per flag and parameter.'
complete -c git-rev-parse -l not --description 'When showing object names, prefix them with ^ a… [See Man Page]'
complete -c git-rev-parse -l symbolic --description 'Usually the object names are output in SHA1 for… [See Man Page]'
complete -c git-rev-parse -l symbolic-full-name --description 'This is similar to --symbolic, but it omits inp… [See Man Page]'
complete -c git-rev-parse -l 'abbrev-ref[' --description 'A non-ambiguous short name of the objects name.'
complete -c git-rev-parse -l all --description 'Show all refs found in refs/.'
complete -c git-rev-parse -l 'branches[' -l 'tags[' -l 'remotes[' --description 'Show all branches, tags, or remote-tracking bra… [See Man Page]'
complete -c git-rev-parse -l glob --description 'Show all refs matching the shell glob pattern pattern.'
complete -c git-rev-parse -l show-toplevel --description 'Show the absolute path of the top-level directory.'
complete -c git-rev-parse -l show-prefix --description 'When the command is invoked from a subdirectory… [See Man Page]'
complete -c git-rev-parse -l show-cdup --description 'When the command is invoked from a subdirectory… [See Man Page]'
complete -c git-rev-parse -l git-dir --description 'Show $GIT_DIR if defined.  Otherwise show the path to the .'
complete -c git-rev-parse -l is-inside-git-dir --description 'When the current working directory is below the… [See Man Page]'
complete -c git-rev-parse -l is-inside-work-tree --description 'When the current working directory is inside th… [See Man Page]'
complete -c git-rev-parse -l is-bare-repository --description 'When the repository is bare print "true", otherwise "false".'
complete -c git-rev-parse -l local-env-vars --description 'List the GIT_* environment variables that are l… [See Man Page]'
complete -c git-rev-parse -l short -l short --description 'Instead of outputting the full SHA1 values of o… [See Man Page]'
complete -c git-rev-parse -l since -l after --description 'Parse the date string, and output the correspon… [See Man Page]'
complete -c git-rev-parse -l until -l before --description 'Parse the date string, and output the correspon… [See Man Page]'
complete -c git-rev-parse -l resolve-git-dir --description 'Check if <path> is a valid git-dir or a git-fil… [See Man Page]'
complete -c git-rev-parse -s S --description 'with git diff-*).  In contrast to the.'
complete -c git-rev-parse -l 'until.' --description '<refname>@{<n>}, e. g.  master@{1}.'
complete -c git-rev-parse -s h --description 'argument.  It\'s shown for.'
complete -c git-rev-parse -l help-all --description 'as documented in gitcli(7).  oc o 2. 3.'

