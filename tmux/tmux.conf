# This is a configuration file for tmux.

# Author: Philipp Moers <soziflip@gmail.com>




#####################
#      PLUGINS      #
#####################


# managed by tmux plugin manager (https://github.com/tmux-plugins/tpm)
# which basically works like a vim plugin manager

## don't worry about tmux panes and vim splits
## See: https://github.com/christoomey/vim-tmux-navigator
# set -g @plugin 'christoomey/vim-tmux-navigator'
# run '~/.tmux/plugins/tpm/tpm'
# bind C-l send-keys 'C-l'
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    # | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l

# follow urls easily
# set-option -g @plugin 'tmux-plugins/tmux-urlview'
# set-option -g @urlview-key 'u'

# yank to system clipboard easily
set-option -g @plugin 'tmux-plugins/tmux-yank'
set-option -g @shell_mode 'vi'
set-option -g @yank_selection 'clipboard' # clipboard | primary | secondary

# select advanced stuff quickly without a mouse
set-option -g @plugin 'tmux-plugins/tmux-copycat'
set-option -g @plugin 'laktak/extrakto'
set-option -g @extrakto_key 'e'

# persistent sessions
# set-option -g @plugin 'tmux-plugins/tmux-resurrect'
# set-option -g @plugin 'tmux-plugins/tmux-continuum'

# show number of unread mails (variables are '#{maildir_counter_N}')
set-option -g @plugin 'tmux-plugins/tmux-maildir-counter'
set-option -g @maildir_counters '~/.mutt/mail/mail.de/INBOX/new|~/.mutt/mail/gmail.com/INBOX/new'

# make mouse usage little better
set-option -g @plugin 'nhdaly/tmux-better-mouse-mode'
set-option -g @emulate-scroll-for-no-mouse-alternate-buffer 'on'


######################
#      SETTINGS      #
######################

# enable mouse usage
set-option -g mouse on

# update window-title
set-option -g set-titles on

# no delay with escape (e.g. in vim)
set-option -sg escape-time 0

# scrollback history
set-option -g history-limit 1000000


# window and pane numbers from 1 instead of 0
set-option -g base-index 1
set-option -g pane-base-index 1

# automatically tidy up window numbers (when window is closed)
set-option -g renumber-windows on

# don't repeat search from start when hitting end
set-option -g wrap-search off

# handle focus events (for vim)
set-option -g focus-events on

# update multiple tmux instances
#set-window-option -g monitor-activity on
#set-option -g visual-activity on




####################
#      COLORS      #
####################


set-option -g default-terminal "screen-256color"

GRUVBOX_DARK0_HARD="colour234"
GRUVBOX_DARK0="colour235"
GRUVBOX_DARK0_SOFT="colour236"
GRUVBOX_DARK1="colour237"
GRUVBOX_DARK2="colour239"
GRUVBOX_DARK3="colour241"
GRUVBOX_DARK4="colour243"
GRUVBOX_GRAY_245="colour245"
GRUVBOX_GRAY_244="colour244"
GRUVBOX_LIGHT0_HARD="colour230"
GRUVBOX_LIGHT0="colour229"
GRUVBOX_LIGHT0_SOFT="colour228"
GRUVBOX_LIGHT1="colour223"
GRUVBOX_LIGHT2="colour250"
GRUVBOX_LIGHT3="colour248"
GRUVBOX_LIGHT4="colour246"
GRUVBOX_LIGHT4="colour246"
GRUVBOX_BRIGHT_RED="colour167"
GRUVBOX_BRIGHT_GREEN="colour142"
GRUVBOX_BRIGHT_YELLOW="colour214"
GRUVBOX_BRIGHT_BLUE="colour109"
GRUVBOX_BRIGHT_PURPLE="colour175"
GRUVBOX_BRIGHT_AQUA="colour108"
GRUVBOX_BRIGHT_ORANGE="colour208"
GRUVBOX_NEUTRAL_RED="colour124"
GRUVBOX_NEUTRAL_GREEN="colour106"
GRUVBOX_NEUTRAL_YELLOW="colour172"
GRUVBOX_NEUTRAL_BLUE="colour66"
GRUVBOX_NEUTRAL_PURPLE="colour132"
GRUVBOX_NEUTRAL_AQUA="colour72"
GRUVBOX_NEUTRAL_ORANGE="colour166"

TMUX_COLOUR_ACCENT_PRIMARY=$GRUVBOX_BRIGHT_RED
TMUX_COLOUR_ACCENT_SECONDARY=$GRUVBOX_BRIGHT_AQUA
TMUX_COLOUR_ACCENT_MODE=$GRUVBOX_NEUTRAL_YELLOW

# statusbar
set-option -g status-bg $GRUVBOX_DARK0
set-option -g status-fg $GRUVBOX_LIGHT3
set-option -g status-attr default

# window title colors
set-window-option -g window-status-fg $GRUVBOX_LIGHT3
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim
set-window-option -g window-status-current-bg $GRUVBOX_DARK4
set-window-option -g window-status-current-fg $GRUVBOX_DARK0_HARD
set-window-option -g window-status-current-attr bold

# pane border
set-option -g pane-border-fg        $GRUVBOX_GRAY_245
set-option -g pane-active-border-fg $TMUX_COLOUR_ACCENT_SECONDARY

# message text
set-option -g message-bg $GRUVBOX_DARK0_HARD
set-option -g message-fg $TMUX_COLOUR_ACCENT_MODE
set-option -g message-attr bold

# choose window display / highlight in copy mode / ...
set-window-option -g mode-bg $TMUX_COLOUR_ACCENT_SECONDARY
set-window-option -g mode-fg $GRUVBOX_DARK0

# pane number display
set-option -g display-panes-active-colour $TMUX_COLOUR_ACCENT_MODE
set-option -g display-panes-colour $TMUX_COLOUR_ACCENT_MODE

# clock
set-window-option -g clock-mode-colour $TMUX_COLOUR_ACCENT_PRIMARY




################
#      UI      #
################


# terminal title
set-option -g set-titles-string "#W - #S"

# message bar
set-option -g display-time 2000
set-option -g display-panes-time 2000

# status bar
set-option -g status on
set-option -g status-position top
set-option -g status-interval 10
# set-option -g status-left-length 80
set-option -g status-right-length 80
set-option -g window-status-separator ' '
set-option -g window-status-format         "#{?window_last_flag,#[bold],}#{?window_activity_flag,#[blink],}#{?window_bell_flag,#[blink],} #W "
set-option -g window-status-current-format "#{?window_bell_flag,#[blink],} #W "
set-option -g status-left ""
set-option -g status-right "\
#{?pane_dead,#{pane_dead_status} ,} #{session_windows} \
#[fg=$TMUX_COLOUR_ACCENT_SECONDARY]|#[fg=colour244] #{session_name} \
#[fg=$TMUX_COLOUR_ACCENT_SECONDARY]|#[fg=colour244] #{host} \
#[fg=$TMUX_COLOUR_ACCENT_SECONDARY]|#[fg=colour244] #{pane_width}x#{pane_height} \
#[fg=$TMUX_COLOUR_ACCENT_SECONDARY]|#[fg=colour244] #(date '+%x %H:%M') \
"
#[fg=$TMUX_COLOUR_ACCENT_SECONDARY]|#[fg=colour244] #(acpi -b | cut -d" " -f5 ; echo to go)\
#[fg=$TMUX_COLOUR_ACCENT_SECONDARY]|#[fg=colour244] #(uptime --pretty)\
#[fg=$TMUX_COLOUR_ACCENT_SECONDARY]|#[fg=colour244] #{maildir_counter_1} #{maildir_counter_2} \
#[fg=$TMUX_COLOUR_ACCENT_SECONDARY]|#[fg=colour244] #{pane_current_path} "




#########################
#      KEYBINDINGS      #
#########################


# don't use vanilla bindings
unbind-key space


# use vim keys
set-option -gw mode-keys vi
set-option -g status-keys emacs


# tmux prefix
set-option -g prefix C-Space
set-option -g prefix2 C-t

# send tmux prefix to remote session
bind-key C-Space send-prefix
bind-key C-t     send-prefix


# toggle status bar
bind-key -T prefix B set status


# create new window
bind-key -T root    C-M-i new-window -c $HOME
bind-key -T prefix      i new-window -c '#{pane_current_path}' -a

# select window
# (also, remember find-window: prefix f)
bind-key -T root "C-m-w" choose-window -F "#W"
bind-key -T prefix   "#" choose-window -F "#W"
# bind-key -T root C-M-"#" choose-window -F "#W"
bind-key -T root C-M-n   next-window
bind-key -T root C-M-p   previous-window
bind-key -T root M-space last-window
bind-key -T prefix space last-window
bind-key -T prefix tab   last-window

# rearrange windows
bind-key -T prefix N swap-window -t +1
bind-key -T prefix P swap-window -t -1

# split window with new pane
bind-key -T prefix o   split-window -v -c '#{pane_current_path}'
bind-key -T prefix O   split-window -h -c '#{pane_current_path}'
bind-key -T prefix C-l split-window -h -c '#{pane_current_path}' -p 50
bind-key -T prefix C-o split-window -v -c '#{pane_current_path}' -p 35\; swap-pane -U#\; select-pane -U
bind-key -T root C-M-o split-window -v -c '#{pane_current_path}' -p 35\; swap-pane -U#\; select-pane -U

# zoom (fullscreen) pane
bind-key -T root C-m-z resize-pane -Z
# new window with current pane
bind-key -T prefix ! break
# bind-key -T prefix I break # tpm overwrites this

# select pane
# bind-key -T prefix j select-pane -t :.+
# bind-key -T prefix k select-pane -t :.-
bind-key -T prefix   h select-pane -L
bind-key -T prefix   l select-pane -R
bind-key -T prefix   j select-pane -D
bind-key -T prefix   k select-pane -U
bind-key -T root C-M-h select-pane -L
bind-key -T root C-M-l select-pane -R
bind-key -T root C-M-j select-pane -D
bind-key -T root C-M-k select-pane -U

# rearrange panes
bind-key -T prefix C-j      select-layout -n
bind-key -T prefix C-k      select-layout -p
bind-key -T prefix J        select-layout even-vertical
bind-key -T prefix L        select-layout even-horizontal
bind-key -T prefix K        swap-pane -U
bind-key -T prefix H        swap-pane -U
bind-key -T root C-M-down   resize-pane -D 3
bind-key -T root C-M-up     resize-pane -U 3
bind-key -T root C-M-right  resize-pane -R 6
bind-key -T root C-M-left   resize-pane -L 6
bind-key -T root C-down     resize-pane -D 3
bind-key -T root C-up       resize-pane -U 3
bind-key -T root C-right    resize-pane -R 6
bind-key -T root C-left     resize-pane -L 6
bind-key -T prefix C-down   resize-pane -D 3
bind-key -T prefix C-up     resize-pane -U 3
bind-key -T prefix C-right  resize-pane -R 6
bind-key -T prefix C-left   resize-pane -L 6

# move pane to other existing window interactively
# bind-key -T prefix m command-prompt "move-window -t '%%'"
# bind-key -T prefix m command-prompt -p "move pane to:"  "join-pane -t :'%%'"
bind-key -T prefix m split-window -h \; choose-window 'kill-pane ; join-pane -hs %%'

# create new session
bind-key -T prefix c new-session

# cycle through sessions
bind-key -T prefix   u switch-client -n
bind-key -T root C-M-u switch-client -n

# rename window or session
bind-key -T prefix ,  run-shell -b "tmux rename-window $(basename #{pane_current_path})"
bind-key -T prefix \; command-prompt -I "#W" "rename-window '%%'"
# bind-key -T prefix $  command-prompt -I "#S" "rename-session '%%'"

# kill pane (or containing window)
bind-key -T prefix x confirm-before -p "kill pane (#W)? (y/n)?" kill-pane

# kill this session and attach another
bind-key -T prefix X confirm-before -p "kill session #S (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"\$(tmux display-message -p \"#S\")\"'"



# command line mode
bind-key -T edit-mode-vi C-g     send-keys -X cancel
bind-key -T edit-mode-vi C-a     send-keys -X start-of-line
bind-key -T edit-mode-vi C-e     send-keys -X end-of-line
bind-key -T edit-mode-vi M-f     send-keys -X next-word
bind-key -T edit-mode-vi M-b     send-keys -X previous-word
bind-key -T edit-mode-vi C-k     send-keys -X delete-end-of-line
bind-key -T edit-mode-vi M-d     send-keys -X delete-word

# copy mode
# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
# https://github.com/myfreeweb/dotfiles/blob/master/tmux.conf
bind-key -T prefix Escape copy-mode # enter copy mode; default [
bind-key -T prefix C-u    copy-mode # enter copy mode; default [
bind-key -T prefix C-b    copy-mode # enter copy mode; default [
bind-key -T prefix M-j    copy-mode # enter copy mode; default [
bind-key -T prefix M-k    copy-mode # enter copy mode; default [
bind-key -T prefix ö      copy-mode \; command-prompt -p "(search down)" "send -X search-forward \"%%%\""
bind-key -T prefix Ö      copy-mode \; command-prompt -p "(search up)" "send -X search-backward \"%%%\""

# bind-key -T prefix -t copy-mode-vi Escape  cancel # exit copy mode; or hit q # THIS BREAKS TMUX-COPYCAT
bind-key -T copy-mode-vi ö       command-prompt -p "(search down)" "send -X search-forward \"%%%\""
bind-key -T copy-mode-vi Ö       command-prompt -p "(search up)" "send -X search-backward \"%%%\""
bind-key -T copy-mode-vi M-k     send-keys -X page-up
bind-key -T copy-mode-vi M-j     send-keys -X page-down
bind-key -T copy-mode-vi ,       send-keys -X jump-again
bind-key -T copy-mode-vi \;      send-keys -X jump-reverse
bind-key -T copy-mode-vi C-a     send-keys -X start-of-line
bind-key -T copy-mode-vi C-e     send-keys -X end-of-line
bind-key -T copy-mode-vi v       send-keys -X begin-selection # begin visual mode
bind-key -T copy-mode-vi V       send-keys -X select-line # visual line
bind-key -T copy-mode-vi C-v     send-keys -X rectangle-toggle # visual block toggle

# YANKING STANDARD WAY:
# bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
# bind-key -T copy-mode-vi y      send-keys -X copy-selection-and-cancel \; run-shell 'tmux show-buffer | xsel -bi && tmux show-buffer | xsel -pi'
# bind-key -T copy-mode-vi Enter  send-keys -X copy-selection-and-cancel \; run-shell 'tmux show-buffer | xsel -bi && tmux show-buffer | xsel -pi'

# YANKING WITH tmux-yank PLUGIN
# (is incompatible with tmux-copycat: https://github.com/tmux-plugins/tmux-copycat/issues/109)
# but i forked an fixed tmux-copycat.

# PASTING:
bind-key -T prefix C-v paste-buffer
bind-key -T prefix v   run-shell 'tmux set-buffer "$(xsel -bo)"' \; paste-buffer # paste; default ]
bind-key -T prefix V   run-shell 'tmux set-buffer "$(xsel -po)"' \; paste-buffer # paste; default ]
#bind-key -T prefix P run-shell 'tmux set-buffer "$(xsel -bo)"' \; paste-buffer # paste; default ]

# read and write and delete paste buffer (xsel method)
# https://wiki.archlinux.org/index.php/Tmux#ICCCM_Selection_Integration
# ctrl+shift+v
#bind-key -T prefix < command-prompt -p "send to tmux:" "run-shell 'tmux set-buffer -- \"$(xsel -o -b)\"'"
#bind-key -T prefix > command-prompt -p "send to xsel:" "run-shell 'tmux show-buffer | xsel -i -b'"
#bind-key -T prefix y run-shell 'tmux show-buffer | xsel -bi && tmux show-buffer | xsel -pi'
#bind-key -T prefix + command-prompt "delete-buffer"



# reload this config file
bind-key -T prefix f5 source-file ~/.tmux.conf \; display-message " Config reloaded..".
# reload this config file and install plugins (default key I)
bind-key -T prefix f5 run-shell ~/.tmux/plugins/tpm/bindings/install_plugins





####################################################################################################

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'


####################################################################################################

# Install tmux plugin if not installed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

# Initialize tmux plugin manager (keep this line at the very bottom)
run '~/.tmux/plugins/tpm/tpm'


