# vim: filetype=neomuttrc

bind generic,index,pager,attach      CS noop
bind generic,index,pager,attach      Ca noop
bind generic,index,pager,attach      Cd noop
bind generic,index,pager,attach      Ci noop
bind generic,index,pager,attach      Cj noop
bind generic,index,pager,attach      Cs noop
bind generic,index,pager,attach      Ct noop
bind generic,index,pager,attach      M  noop
bind generic,index,pager,attach      MS noop
bind generic,index,pager,attach      Ma noop
bind generic,index,pager,attach      Ma noop
bind generic,index,pager,attach      Md noop
bind generic,index,pager,attach      Mi noop
bind generic,index,pager,attach      Mj noop
bind generic,index,pager,attach      Ms noop
bind generic,index,pager,attach      Mt noop
bind generic,index,pager,attach      f  noop
bind generic,index,pager,attach      g  noop
bind generic,pager,pager,attach      ga noop
bind generic,index,pager,attach      gd noop
bind generic,index,pager,attach      gi noop
bind generic,index,pager,attach      gj noop
bind generic,index,pager,attach      gk noop
bind generic,index,pager,attach      u  noop
bind pager                           y  noop


##############
# Navigation #
##############

bind generic,pager <Down> next-line
bind generic,pager <Up> previous-line

bind generic,index gg first-entry
bind generic,index G last-entry
bind pager gg top
bind pager G bottom


bind index \Cf next-page
bind index \Cb previous-page
# bind index \Cd noop
# bind index \Cu previous-page
bind generic,pager,index <Esc>j half-down
bind generic,pager,index <Esc>k half-up

bind generic,pager,index n search-next
bind generic,pager,index N search-opposite
bind  index ff  limit # filter mailbox by string (prefix `=` or regex (prefix `~`)
macro index uf "<limit>all\n"

bind  index,attach,browser  j       next-entry
bind  index,attach,browser  k       previous-entry
bind  index,attach,browser  <Down>  next-entry
bind  index,attach,browser  <Up>    previous-entry
macro index,attach,browser  gj      "<next-entry><next-entry><next-entry><next-entry><next-entry><next-entry><next-entry>"
macro index,attach,browser  gk      "<previous-entry><previous-entry><previous-entry><previous-entry><previous-entry><previous-entry><previous-entry>"
macro index,attach,browser  g<Down> "<next-entry><next-entry><next-entry><next-entry><next-entry><next-entry><next-entry>"
macro index,attach,browser  g<Up>   "<previous-entry><previous-entry><previous-entry><previous-entry><previous-entry><previous-entry><previous-entry>"
bind index J next-thread
bind index K previous-thread
bind index z collapse-thread
bind index Z collapse-all

bind pager j next-line
bind pager k previous-line

# remember <tab> to jump to next unread message!


################
# Mail actions #
################

bind index,pager          r  reply
bind index,pager          R  group-reply
bind index,pager          F  forward-message
bind index,pager          d  delete-message # mark for deletion
bind index                ud undelete-message
bind index                D  sync-mailbox # perform deletions in mailbox
bind index,pager          S  save-message # save to a mailbox, which I basically never do.   Instead save to file:
macro index,pager         s  "| ~/.config/mutt/save-email-to-file.sh $HOME/tmp<enter>:echo 'Email saved to $HOME/tmp'<enter>"
macro attach              s <save-entry><kill-line>$HOME/tmp/
bind index,pager          b  bounce-message
bind index                t  toggle-new
macro index M "<save-message>?<toggle-mailboxes>" "move a message to a mailbox"
macro index C "<copy-message>?<toggle-mailboxes>" "copy a message to a mailbox"

macro pager yae "<pipe-message>xclip -selection clipboard<enter>" "copy message text to clipboard"


########
# Misc #
########

# abort command (instead of ESC) with \Cg

bind index \Cd quit

# reload config
macro index,pager,compose,browser,attach <F5> ":source ~/.config/mutt/muttrc\n" "reload config"

# open urls easily (urlscan is an alternative to urlview)
macro index,pager    \cu "<pipe-message> urlscan<Enter>" "call urlscan to extract URLs out of a message"
macro attach,compose \cu "<pipe-entry>   urlscan<Enter>" "call urlscan to extract URLs out of a message"

# open html email in browser
macro attach      !                                      "<pipe-message>cat > /tmp/mutt.html; $BROWSER /tmp/mutt.html<enter>" "open html email in browser"
macro index,pager ! "<view-attachments><search>html<enter><pipe-message>cat > /tmp/mutt.html; $BROWSER /tmp/mutt.html<enter>" "open html email in browser"
# macro index,pager V "<view-attachments><search>html<enter><view-mailcap><exit>"

# search mails with notmuch (TODO: setup again)
macro generic,index \C/ \
     "<enter-command>unset wait_key<enter><shell-escape>notmuch-mutt -r --prompt search<enter>\
     <change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter>" \
     "notmuch: search mail"

# goobook
macro index,pager A "<pipe-message>goobook add<return>" "add sender to google contacts"
bind editor <Tab> complete-query

# sidebar
macro index,pager B '<enter-command>toggle sidebar_visible<enter><redraw-screen>'
bind index,pager \Cp sidebar-prev
bind index,pager \Cn sidebar-next
bind index,pager \Cl sidebar-open
