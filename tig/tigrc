# Configuration File for
#
#   tig - an interface for git
#
# Author: Philipp Moers <soziflip@gmail.com>



# look
color cursor                white       color237
color header                color167    default
color title-blur            color106    color236
color title-focus           color106    color236    bold
color section               color172    color236
color status                color167    default
color search-result         black       color106
color diff-stat             color66     default
color diff-add-highlight    color142    default     standout
color diff-del-highlight    color167    default     standout


# beautiful diff view
#set diff-options TODO


# lines before/after lines that differ
set diff-context = 0

# case sensitivity in searches
set ignore-case = true

# pass line number to editor
set editor-line-number = true

# when to refresh the views
set refresh-mode = auto
#set refresh-mode = periodic
#set refresh-interval = 2





# 'unbindings'
bind generic g none
bind main    G none
bind generic p none

# quit
bind generic <C-D> quit

# reload config
bind generic <F5> :source ~/.tigrc

# move fast
bind generic gj move-half-page-down
bind generic gk move-half-page-up

# refresh views
bind generic r refresh

# views
bind generic wm view-main
bind generic wd view-diff
bind generic wl view-log
bind generic wt view-tree
bind generic wf view-blob
bind generic wb view-blame
bind generic wr view-refs
bind generic wp view-pager
bind generic wh view-help
bind generic ws view-status
bind generic wc view-stage
bind generic wA view-stash # see git/misc/git-branch-is-the-new-stash.md
bind generic wa view-refs
bind generic wg view-grep

# view manipulation
bind generic <Esc>j move-half-page-down
bind generic <Esc>k move-half-page-up
bind generic gg     move-first-line
bind generic G      move-last-line
bind main    G      move-last-line
bind generic m maximize

# search
bind generic รถ search
bind generic ร search-back

# quickly jump to the next diff chunk in the stage view
#bind stage <Enter> :/^@@

# add/stage/unstage and commit
bind status a none
bind stage  a none
bind status s status-update
bind stage  s status-update
bind status c !git commit
bind stage  c !git commit

# checkout, reset and delete
bind status C  ?git checkout -- %(file)
bind stage  C  ?git checkout -- %(file)
bind status R  ?git reset --hard
bind stage  R  ?git reset --hard
bind status xr ?rm -r %(file)

# amend to last commit
bind status A ?git commit --amend
# amend to older commit
bind main A ?git amend-old %(commit)
bind diff A ?git amend-old %(commit)

# stash
bind status aS ?git stash save --include-untracked
bind stage  aS ?git stash save --include-untracked
bind stash  aP ?git stash pop %(stash)
bind status as ?git save %(prompt)
bind stage  as ?git save %(prompt)
bind refs   ap ?git pop-prefix %(branch)

# checkout/merge refs
bind refs c ?git checkout %(branch)
bind refs m ?git merge %(branch)
bind refs b !git checkout -b %(prompt)
bind refs d ?git branch -d %(branch)

# rename branch
bind refs R ?git branch -m %(branch) %(prompt)

# copy commit id to clipboard
bind generic y !bash -c "printf %(commit) | xsel -b"

# remote commands
bind generic f !git fetch
bind generic pp !git pull
bind generic pu !git push
bind generic pU !git push -u %(remote) %(branch)


# more/less context
bind diff  + :toggle diff-context +1
bind diff  - :toggle diff-context -1
bind stage + :toggle diff-context +1
bind stage - :toggle diff-context -1
